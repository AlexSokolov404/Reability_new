{"version":3,"sources":["Component/HeaderFooterComp/HeaderInfo.js","Component/HeaderFooterComp/Footer.jsx","Component/HeaderFooterComp/ButtonHeader.jsx","Component/HeaderFooterComp/Header.jsx","Component/ContentElem/Source/New_model.svg","Component/ContentElem/Source/Download_model.svg","Component/ContentElem/Source/Settings.svg","Component/ContentElem/Source/Help.svg","Component/ContentElem/Source/Exit.svg","Component/ContentElem/ContentPageOne/ContentButtons.jsx","Component/ContentElem/Source/Logo_vavko.png","Component/ContentElem/ContentPageOne/ContentLogo.jsx","Component/ContentElem/ContentPageOne.jsx","Component/ContentElem/Source/Arm.svg","Component/ContentElem/Source/Server_group.svg","Component/ContentElem/Source/Switch.svg","Component/ContentElem/ContentPageTwo/DragElementArea.jsx","Component/ContentElem/ContentPageTwo/ChartPage.jsx","Component/ContentElem/ModalWindowElements/headersElements.js","Component/ContentElem/ModalWindowElements/ModalComponents.jsx","Component/ContentElem/ModalWindowElements/MWHeaders.jsx","Component/ContentElem/ContentPageTwo.jsx","Component/ContentElem/ContentPageOne/ExitWindow.jsx","Component/ContentElem/ContentPageOne/Settings.jsx","Component/ContentElem/ContentPageOne/SettingProperties.js","Component/ContentElem/ContentPageOne/LoadModel.jsx","Component/App.jsx","index.js"],"names":["id","title","text","link","Меню","today","Date","Footer","_jsxs","className","style","height","paddingRight","children","_jsx","width","color","fontFamily","fontSize","marginTop","getFullYear","role","ButtonHeader","_Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","this","props","type","map","subtext","NavLink","to","href","toString","Component","Header","btnHeader","name","btnHead","ContentButtons","btnElm","New_model","Dowload_model","Settings","Help","Exit","buttonElem","i","src","alt","ContentLogo","Logo","ContentPageOne","DragElementArea","_ref","chart","setChart","setTimeTest","timeTest","onDragStart","event","nodeType","dataTransfer","setData","effectAllowed","prompt","arm","cursor","servergroup","kommutator","onClick","position","borderRadius","backgroundColor","zIndex","data","subject","A","B","fullMark","getData","time","mas","mid","push","uv","Math","exp","pow","ChartPage","valueInput","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","stroke","ResponsiveContainer","RadarChart","cx","cy","outerRadius","PolarGrid","PolarAngleAxis","PolarRadiusAxis","Radar","fill","fillOpacity","srcImg","ServerElem","subName","Switch","Arm","ModalComponents","elements","setValueInput","nodes","filter","elem","armArr","switchArr","serverArr","switchElements","scope","selected","_","placeholder","onChange","e","concat","_toConsumableArray","target","length","console","log","_Fragment","headersElements","marginLeft","subElem","MWHeaders","tabindex","initialElements","customArmNodeStyle","backgroundImage","armNode","backgroundPosition","backgroundSize","backgroundRepeat","customServerNodeStyle","serverGroupNode","customSwitchNodeStyle","switchNode","styleLabel","display","alignItems","justifyContent","idArm","idServer","idSwitch","getId","ContentPageTwo","settingPropertie","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","reactFlowWrapper","useRef","_useState5","_useState6","reactFlowInstance","setReactFlowInstance","_useState7","_useState8","setElements","_useState9","_useState10","styleLines","colorLine","strokeWidth","nodeTypes","_ref2","Handle","Position","Left","Right","Top","serverNode","_ref3","_objectSpread","Bottom","_ref4","onConnect","useCallback","params","els","addEdge","animated","active","chartPage","ReactFlowProvider","ref","ReactFlow","onElementsRemove","elementsToRemove","removeElements","onLoad","_reactFlowInstance","onDrop","preventDefault","reactFlowBounds","current","getBoundingClientRect","project","x","clientX","y","clientY","newNode","label","es","onDragOver","dropEffect","deleteKeyCode","connectionLineStyle","Background","variant","Controls","ExitWindow","textAlign","flexDirection","SettingItem","onToggle","onColor","onRange","propertie","class","checked","min","max","setSettingPropertie","paddingTop","settingsId","nextActive","newSettingPropertie","find","a","nextColor","newColor","nextRange","newRange","LoadModel","App","SettingProperties","Router","borderBottom","headerInfo","Routes","Route","path","element","ReactDOM","render","document","getElementById"],"mappings":"mOAAe,GACb,CACEA,GAAI,KACJC,MAAO,2BACPC,KAAM,CAAC,2BAAQ,8FAAoB,mFACnCC,KAAM,CACJC,2BAAM,IACN,8FAAoB,aACpB,kFAAkB,O,gBCLpBC,EAAQ,IAAIC,KAED,SAASC,IACtB,OACEC,eAAA,OACEC,UAAU,oFACVC,MAAO,CAAEC,OAAQ,OAAQC,aAAc,QAASC,SAAA,CAEhDC,cAAA,OAAKJ,MAAO,CAAEK,MAAO,SACrBP,eAAA,MACEE,MAAO,CACLM,MAAO,UACPC,WAAY,UACZC,SAAU,GACVC,UAAW,OACXN,SAAA,CACH,UACSR,EAAMe,iBAEhBN,cAAA,OAAKL,UAAU,WAAWC,MAAO,CAAEK,MAAO,OAAQF,SAChDC,cAAA,OACEL,UAAU,qEACVY,KAAK,cACLX,MAAO,CAAEK,MAAO,QAChB,gBAAc,MACd,gBAAc,IACd,gBAAc,MAAKF,SACpB,aAMT,C,4CCjCMS,EAAY,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,OAAAK,YAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CA8Bf,OA9BeC,YAAAR,EAAA,EAAAS,IAAA,SAAAC,MAChB,WACE,IAAQ9B,EAAS+B,KAAKC,MAAdhC,KACR,OACEM,eAAA,OACEC,UAAU,2BACVY,KAAK,QACL,aAAW,gBAAeR,SAAA,CAE1BC,cAAA,UACEL,UAAU,iDACV0B,KAAK,SACL,iBAAe,WACf,gBAAc,QAAOtB,SAEpBX,EAAKD,QAERa,cAAA,MAAIL,UAAU,gBAAeI,SAC1BX,EAAKA,KAAKkC,KAAI,SAACC,GAAO,OACrBvB,cAACwB,IAAO,CAACC,GAAIrC,EAAKC,KAAKkC,GAASxB,SAC9BC,cAAA,MAAIL,UAAU,WAAUI,SACtBC,cAAA,KAAGL,UAAU,WAAW+B,KAAMtC,EAAKC,KAAKkC,GAASxB,SAC9CwB,OAH+BA,EAAQI,WAMpC,QAKpB,KAACnB,CAAA,CA9Be,CAASoB,aAiCZpB,IClCA,SAASqB,EAAOT,GAC7B,IACMU,EADSV,EAAMW,KACIT,KAAI,SAACU,GAAO,OACnChC,cAAA,MAAqBL,UAAU,WAAUI,SACtCC,cAACQ,EAAY,CAACpB,KAAM4C,KADdA,EAAQ9C,GAEZ,IAEP,OAAOc,cAAA,MAAIL,UAAU,gBAAeI,SAAE+B,GACxC,CCVe,UAA0B,sCCA1B,MAA0B,2CCA1B,MAA0B,qCCA1B,MAA0B,iCCA1B,MAA0B,iCCO1B,SAASG,IACtB,IAQMC,EARc,CAClB,CAAE/C,MAAO,sEAAgBE,KAAM8C,EAAWT,KAAM,aAChD,CAAEvC,MAAO,8FAAoBE,KAAM+C,EAAeV,KAAM,cACxD,CAAEvC,MAAO,yDAAaE,KAAMgD,EAAUX,KAAM,aAC5C,CAAEvC,MAAO,6CAAWE,KAAMiD,EAAMZ,KAAM,SACtC,CAAEvC,MAAO,iCAASE,KAAMkD,EAAMb,KAAM,UAGXJ,KAAI,SAACkB,EAAYC,GAAC,OAC3CzC,cAACwB,IAAO,CAACC,GAAIe,EAAWd,KAAK3B,SAC3BL,eAAA,UAEE2B,KAAK,SACL1B,UAAU,uEAAsEI,SAAA,CAE/EyC,EAAWrD,MACZa,cAAA,OAAK0C,IAAKF,EAAWnD,KAAMM,UAAU,OAAOgD,IAAKH,EAAWrD,UALvDqD,EAAWrD,QAFesD,EASzB,IAGZ,OAAOzC,cAAA,OAAKL,UAAU,qBAAoBI,SAAEmC,GAC9C,CC9Be,UAA0B,uC,OCG1B,SAASU,IACtB,OACE5C,cAAA,OAAKL,UAAU,eAAcI,SAC3BC,cAAA,OACE0C,IAAKG,EACLlD,UAAU,8DACVgD,IAAI,gDAIZ,CCVqB,IAEfG,EAAc,SAAArC,GAAAC,YAAAoC,EAAArC,GAAA,IAAAE,EAAAC,YAAAkC,GAAA,SAAAA,IAAA,OAAAjC,YAAA,KAAAiC,GAAAnC,EAAAG,MAAA,KAAAC,UAAA,CAQjB,OARiBC,YAAA8B,EAAA,EAAA7B,IAAA,SAAAC,MAClB,WACE,OACExB,eAAA,OAAKC,UAAU,2CAA0CI,SAAA,CACvDC,cAACiC,EAAc,IACfjC,cAAC4C,EAAW,MAGlB,KAACE,CAAA,CARiB,CAASlB,aAWdkB,I,QChBA,G,OAAA,IAA0B,iCCA1B,MAA0B,yCCA1B,MAA0B,mCCK5BC,EAAkB,SAAHC,GAAoD,IAA9CC,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SAAoBC,GAAFH,EAARI,SAAqBJ,EAAXG,aACrDE,EAAc,SAACC,EAAOC,GAC1BD,EAAME,aAAaC,QAAQ,wBAAyBF,GACpDD,EAAME,aAAaE,cAAgB,MACrC,EAKA,OAHAT,GACEE,EAAYQ,OAAO,mPAAiD,KAGpEjE,eAAA,OAAKC,UAAU,gCAA+BI,SAAA,CAC5CC,cAAA,OACEL,UAAU,+BACV+C,IAAKkB,EACLjB,IAAI,yLACJ/C,MAAO,CAAEiE,OAAQ,WACjBR,YAAa,SAACC,GACZ,OAAOD,EAAYC,EAAO,UAC5B,IAEFtD,cAAA,KAAGL,UAAU,mBAAmBC,MAAO,CAAEM,MAAO,SAAUH,SAAC,uBAG3DC,cAAA,OACEL,UAAU,0BACV+C,IAAKoB,EACLnB,IAAI,8FACJ/C,MAAO,CAAEiE,OAAQ,WACjBR,YAAa,SAACC,GACZ,OAAOD,EAAYC,EAAO,aAC5B,IAEFtD,cAAA,KAAGL,UAAU,mBAAmBC,MAAO,CAAEM,MAAO,SAAUH,SAAC,gGAG3DC,cAAA,OACEL,UAAU,0BACV+C,IAAKqB,EACLpB,IAAI,sEACJ/C,MAAO,CAAEiE,OAAQ,WACjBR,YAAa,SAACC,GAAK,OAAKD,EAAYC,EAAO,aAAa,IAE1DtD,cAAA,KAAGL,UAAU,mBAAmBC,MAAO,CAAEM,MAAO,SAAUH,SAAC,wEAG3DL,eAAA,OAAKC,UAAU,oBAAmBI,SAAA,CAChCC,cAAA,UACEL,UAAU,kBACV0B,KAAK,SACL2C,QAAS,WACPd,GAAUD,EACZ,EAAElD,SAEDkD,EAAQ,sEAAiB,6EAE5BjD,cAAA,UACEL,UAAU,6BACV,iBAAe,QACf,iBAAe,gBAAeI,SAC/B,uEAMT,E,mHCtDMH,EAAQ,CACZqE,SAAU,WACVhE,MAAO,OACPJ,OAAQ,OACRqE,aAAc,OACdC,gBAAiB,UACjBC,OAAQ,MAGJC,EAAO,CACX,CACEC,QAAS,6EACTC,EAAG,IACHC,EAAG,IACHC,SAAU,KAEZ,CACEH,QAAS,eACTC,EAAG,GACHC,EAAG,IACHC,SAAU,KAEZ,CACEH,QAAS,+CACTC,EAAG,GACHC,EAAG,IACHC,SAAU,KAEZ,CACEH,QAAS,uEACTC,EAAG,GACHC,EAAG,GACHC,SAAU,MAcd,IAAMC,EAAU,SAACxD,GAGf,IAFA,IALgByD,EAKZC,EAAM,GACNC,EAAM,EACH3D,KACL2D,IACAD,EAAIE,KAAK,CACPC,IAVYJ,EAUCE,EATVG,KAAKC,KAAK,MAAQD,KAAKE,IAAI,IAAK,GAAK,GAAKP,MAcjD,OAAOC,CACT,EAEe,SAASO,EAASnC,GAA4B,IAAzBI,EAAQJ,EAARI,SAAoBJ,EAAVoC,WAC5C,OACEpF,cAAA,OAAKJ,MAAOA,EAAOD,UAAU,YAAWI,SACtCL,eAAA,OAAKC,UAAU,iBAAgBI,SAAA,CAC7BC,cAAA,OAAKL,UAAU,kBAAkBC,MAAO,CAAEM,MAAO,SAAUH,SAAC,wQAG5DC,cAAA,OAAKL,UAAU,MAAMC,MAAO,CAAEM,MAAO,SAAUH,SAAC,yPAGhDL,eAAC2F,IAAS,CACR1F,UAAU,MACVM,MAAO,IACPJ,OAAQ,IACRwE,KAAMK,EAAQtB,GACdkC,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GACR3F,SAAA,CAEFC,cAAC2F,IAAa,CAACC,gBAAgB,QAC/B5F,cAAC6F,IAAK,CAACC,QAAQ,SACf9F,cAAC+F,IAAK,IACN/F,cAACgG,IAAO,IACRhG,cAACiG,IAAM,IACPjG,cAACkG,IAAI,CAAC7E,KAAK,WAAWyE,QAAQ,KAAKK,OAAO,eAE5CzG,eAAC2F,IAAS,CACR1F,UAAU,MACVM,MAAO,IACPJ,OAAQ,IACRwE,KAAMK,EAAQtB,GACdkC,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GACR3F,SAAA,CAEFC,cAAC2F,IAAa,CAACC,gBAAgB,QAC/B5F,cAAC6F,IAAK,CAACC,QAAQ,SACf9F,cAAC+F,IAAK,IACN/F,cAACgG,IAAO,IACRhG,cAACiG,IAAM,IAEPjG,cAACkG,IAAI,CAAC7E,KAAK,WAAWyE,QAAQ,KAAKK,OAAO,eAE5CnG,cAAA,QAAML,UAAU,kBAAkBC,MAAO,CAAEM,MAAO,SAAUH,SAAC,0SAG7DC,cAAA,QAAML,UAAU,MAAMC,MAAO,CAAEM,MAAO,SAAUH,SAAC,wJAGjDL,eAAC2F,IAAS,CACR1F,UAAU,MACVM,MAAO,IACPJ,OAAQ,IACRwE,KAAMK,EAAQtB,GACdkC,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GACR3F,SAAA,CAEFC,cAAC2F,IAAa,CAACC,gBAAgB,QAC/B5F,cAAC6F,IAAK,CAACC,QAAQ,SACf9F,cAAC+F,IAAK,IACN/F,cAACgG,IAAO,IACRhG,cAACiG,IAAM,IACPjG,cAACkG,IAAI,CAAC7E,KAAK,WAAWyE,QAAQ,KAAKK,OAAO,eAE5CnG,cAACoG,IAAmB,CAACnG,MAAM,MAAMJ,OAAQ,IAAKF,UAAU,MAAKI,SAC3DL,eAAC2G,IAAU,CAACC,GAAG,MAAMC,GAAG,MAAMC,YAAY,MAAMnC,KAAMA,EAAKtE,SAAA,CACzDC,cAACyG,IAAS,IACVzG,cAAC0G,IAAc,CAACZ,QAAQ,YACxB9F,cAAC2G,IAAe,IAChB3G,cAAC4G,IAAK,CACJ7E,KAAK,OACL+D,QAAQ,IACRK,OAAO,UACPU,KAAK,UACLC,YAAa,cAO3B,C,YCnKe,GACb,CACE5H,GAAI,SACJ6C,KAAM,8FACNgF,OAAQC,EACRC,QAAS,CACP,SACA,4HACA,4HACA,wFACA,4HACA,iKACA,sLAGJ,CACE/H,GAAI,SACJ6C,KAAM,4EACNgF,OAAQG,EACRD,QAAS,CACP,SACA,4HACA,4HACA,wFACA,4HACA,iKACA,sLAGJ,CACE/H,GAAI,MACJ6C,KAAM,iJACNgF,OAAQI,EACRF,QAAS,CACP,SACA,4HACA,4HACA,wFACA,4HACA,iKACA,uLCyPSG,EAnSS,SAAHpE,GAAiD,IAA3CqE,EAAQrE,EAARqE,SAAUjC,EAAUpC,EAAVoC,WAAYkC,EAAatE,EAAbsE,cAC3CC,EAAQF,EAASG,QAAO,SAACC,GAC3B,MAAO,SAAUA,CACnB,IAEIC,EAASH,EAAMC,QAAO,SAACC,GACzB,MAAqB,YAAdA,EAAKpG,IACd,IAEIsG,EAAYJ,EAAMC,QAAO,SAACC,GAC5B,MAAqB,eAAdA,EAAKpG,IACd,IAEIuG,EAAYL,EAAMC,QAAO,SAACC,GAC5B,MAAqB,eAAdA,EAAKpG,IACd,IAMMwG,GAJMR,EAASG,QAAO,SAACC,GAC3B,MAAO,WAAYA,CACrB,IAEuB,SAACpG,GACtB,OAAQA,GACN,IAAK,MACH,OACErB,cAAA,SAAAD,SACG2H,EAAOpG,KAAI,SAACmG,EAAMhF,GAAC,OAClB/C,eAAA,MAAAK,SAAA,CACEC,cAAA,MAAI8H,MAAM,MAAK/H,SAAE0C,EAAI,IACrBzC,cAAA,MAAAD,SAAK0H,EAAKvI,KACVc,cAAA,MAAAD,SACEL,eAAA,UACEC,UAAU,6BACV,aAAW,uDAAwBI,SAAA,CAEnCC,cAAA,UAAQ+H,UAAQ,EAAAhI,SAAC,sCAChB2H,EAAOpG,KAAI,SAAC0G,EAAGvF,GAAC,OACfzC,cAAA,UAAQkB,MAAOuB,EAAI,EAAE1C,SAAE0C,EAAI,GAAW,SAI5CzC,cAAA,MAAAD,SACEC,cAAA,MAAIL,UAAU,iCAAgCI,SAC3CC,cAAA,MAAIL,UAAU,kBAAiBI,SAAC,oBAGrCC,cAAA,MAAAD,SACEL,eAAA,OAAKC,UAAU,mBAAkBI,SAAA,CAC/BC,cAAA,SACEqB,KAAK,OACL1B,UAAU,eACVsI,YAAY,qFACZ,aAAW,uBACX,mBAAiB,eACjBC,SAAU,SAACC,GAAC,OACVb,EAAc,GAADc,OAAAC,YAAKjD,GAAU,CAAE,CAAE3C,EAAG0F,EAAEG,OAAOpH,SAAS,IAGzDxB,eAAA,QAAMC,UAAU,mBAAmBT,GAAG,eAAca,SAAA,CAAC,YAC/CC,cAAA,OAAAD,SAAK,OAAQ,YAIvBC,cAAA,MAAAD,SACEL,eAAA,OAAKC,UAAU,mBAAkBI,SAAA,CAC/BC,cAAA,SACEqB,KAAK,OACL1B,UAAU,eACVsI,YAAY,qFACZ,aAAW,uBACX,mBAAiB,iBAEnBjI,cAAA,QAAML,UAAU,mBAAmBT,GAAG,eAAca,SAAC,0CAKzDC,cAAA,MAAAD,SACEL,eAAA,OAAKC,UAAU,mBAAkBI,SAAA,CAC/BC,cAAA,SACEqB,KAAK,OACL1B,UAAU,eACVsI,YAAY,qFACZ,aAAW,uBACX,mBAAiB,iBAEnBjI,cAAA,QAAML,UAAU,mBAAmBT,GAAG,eAAca,SAAC,uCA3DlD0C,EAgEJ,MAKb,IAAK,SACH,OACEzC,cAAA,SAAAD,SACG6H,EAAUtG,KAAI,SAACmG,EAAMhF,GAAC,OACrB/C,eAAA,MAAAK,SAAA,CACEC,cAAA,MAAI8H,MAAM,MAAK/H,SAAE0C,EAAI,IACrBzC,cAAA,MAAAD,SAAA,qGAAAqI,OAA0BX,EAAKvI,GAAGuI,EAAKvI,GAAGqJ,OAAS,MACnDvI,cAAA,MAAAD,SACEL,eAAA,UACEC,UAAU,6BACV,aAAW,uDAAwBI,SAAA,CAEnCC,cAAA,UAAQ+H,UAAQ,EAAAhI,SAAC,sCAChB6H,EAAUtG,KAAI,SAAC0G,EAAGvF,GAAC,OAClBzC,cAAA,UAAQkB,MAAOuB,EAAI,EAAE1C,SAAE0C,EAAI,GAAW,SAI5CzC,cAAA,MAAAD,SAAI,wGACJC,cAAA,MAAAD,SACEL,eAAA,OAAKC,UAAU,mBAAkBI,SAAA,CAC/BC,cAAA,SACEqB,KAAK,OACL1B,UAAU,eACVsI,YAAY,qFACZ,aAAW,uBACX,mBAAiB,iBAEnBvI,eAAA,QAAMC,UAAU,mBAAmBT,GAAG,eAAca,SAAA,CAAC,YAC/CC,cAAA,OAAAD,SAAK,OAAQ,YAIvBC,cAAA,MAAAD,SACEL,eAAA,OAAKC,UAAU,mBAAkBI,SAAA,CAC/BC,cAAA,SACEqB,KAAK,OACL1B,UAAU,eACVsI,YAAY,qFACZ,aAAW,uBACX,mBAAiB,iBAEnBjI,cAAA,QAAML,UAAU,mBAAmBT,GAAG,eAAca,SAAC,0CAKzDC,cAAA,MAAAD,SACEL,eAAA,OAAKC,UAAU,mBAAkBI,SAAA,CAC/BC,cAAA,SACEqB,KAAK,OACL1B,UAAU,eACVsI,YAAY,qFACZ,aAAW,uBACX,mBAAiB,iBAEnBjI,cAAA,QAAML,UAAU,mBAAmBT,GAAG,eAAca,SAAC,uCApDlD0C,EAyDJ,MAKb,IAAK,SACH,OACEzC,cAAA,SAAAD,SACG4H,EAAUrG,KAAI,SAACmG,EAAMhF,GAAC,OACrB/C,eAAA,MAAAK,SAAA,CACEC,cAAA,MAAI8H,MAAM,MAAK/H,SAAE0C,EAAI,IACrBzC,cAAA,MAAAD,SAAA,6EAAAqI,OAA2BX,EAAKvI,GAAGuI,EAAKvI,GAAGqJ,OAAS,MACpDvI,cAAA,MAAAD,SACEL,eAAA,UACEC,UAAU,6BACV,aAAW,uDAAwBI,SAAA,CAEnCC,cAAA,UAAQ+H,UAAQ,EAAAhI,SAAC,sCAChB4H,EAAUrG,KAAI,SAAC0G,EAAGvF,GAAC,OAClBzC,cAAA,UAAQkB,MAAOuB,EAAI,EAAE1C,SAAE0C,EAAI,GAAW,SAI5CzC,cAAA,MAAAD,SAAI,wGACJC,cAAA,MAAAD,SACEL,eAAA,OAAKC,UAAU,mBAAkBI,SAAA,CAC/BC,cAAA,SACEqB,KAAK,OACL1B,UAAU,eACVsI,YAAY,qFACZ,aAAW,uBACX,mBAAiB,iBAEnBvI,eAAA,QAAMC,UAAU,mBAAmBT,GAAG,eAAca,SAAA,CAAC,YAC/CC,cAAA,OAAAD,SAAK,OAAQ,YAIvBC,cAAA,MAAAD,SACEL,eAAA,OAAKC,UAAU,mBAAkBI,SAAA,CAC/BC,cAAA,SACEqB,KAAK,OACL1B,UAAU,eACVsI,YAAY,qFACZ,aAAW,uBACX,mBAAiB,iBAEnBjI,cAAA,QAAML,UAAU,mBAAmBT,GAAG,eAAca,SAAC,0CAKzDC,cAAA,MAAAD,SACEL,eAAA,OAAKC,UAAU,mBAAkBI,SAAA,CAC/BC,cAAA,SACEqB,KAAK,OACL1B,UAAU,eACVsI,YAAY,qFACZ,aAAW,uBACX,mBAAiB,iBAEnBjI,cAAA,QAAML,UAAU,mBAAmBT,GAAG,eAAca,SAAC,uCApDlD0C,EAyDJ,MAKb,QACE,OACEzC,cAAA,SAAAD,SACEL,eAAA,MAAAK,SAAA,CACEC,cAAA,MAAI8H,MAAM,QACV9H,cAAA,MAAAD,SAAI,4GAKhB,GAIA,OAFAyI,QAAQC,IAAIrD,GAGVpF,cAAA0I,WAAA,CAAA3I,SACG4I,EAAgBrH,KAAI,SAACmG,EAAMhF,GAAC,OAC3BzC,cAAA,OAAKL,UAAU,YAAYT,GAAG,mBAAkBa,SAC9CL,eAAA,OAAKC,UAAU,iBAAgBI,SAAA,CAC7BC,cAAA,MAAIL,UAAU,mBAAmBT,GAAE,yBAAAkJ,OAA2B3F,GAAI1C,SAChEL,eAAA,UACEC,UAAU,mBACV0B,KAAK,SACL,iBAAe,WACf,oCAAA+G,OAAmC3F,GACnC,gBAAc,OACd,mCAAA2F,OAAkC3F,GAAI1C,SAAA,CAErC0H,EAAK1F,KACN/B,cAAA,OACE0C,IAAK+E,EAAKV,OACVpE,IAAK8E,EAAK1F,KACVnC,MAAO,CAAEgJ,WAAY,eAI3B5I,cAAA,OACEd,GAAE,kBAAAkJ,OAAoB3F,GACtB9C,UAAU,mCACV,2CAAAyI,OAA0C3F,GAAI1C,SAE9CC,cAAA,OAAKL,UAAU,iBAAgBI,SAC7BL,eAAA,SAAOC,UAAU,kCAAiCI,SAAA,CAChDC,cAAA,SAAAD,SACEC,cAAA,MAAAD,SACG0H,EAAKR,QAAQ3F,KAAI,SAACuH,EAASpG,GAAC,OAC3BzC,cAAA,MAAI8H,MAAM,MAAMnI,UAAU,eAAcI,SACrC8I,GAD2CpG,EAEzC,QAIVoF,EAAeJ,EAAKvI,eAnCuBuD,EAwChD,KAId,ECjSe,SAASqG,GAAS9F,GAA2C,IAAxCqE,EAAQrE,EAARqE,SAAUjC,EAAUpC,EAAVoC,WAAYkC,EAAatE,EAAbsE,cACxD,OACEtH,cAAA,OACEL,UAAU,aACVT,GAAG,eACH6J,SAAS,KACT,kBAAgB,oBAChB,cAAY,OAAMhJ,SAElBC,cAAA,OAAKL,UAAU,gCAA+BI,SAC5CL,eAAA,OAAKC,UAAU,gBAAeI,SAAA,CAC5BL,eAAA,OAAKC,UAAU,eAAcI,SAAA,CAC3BC,cAAA,MAAIL,UAAU,cAAcT,GAAG,oBAAmBa,SAAC,kOAGnDC,cAAA,UACEqB,KAAK,SACL1B,UAAU,YACV,kBAAgB,QAChB,aAAW,kDAGfK,cAAA,OAAKL,UAAU,aAAYI,SACzBC,cAACoH,EAAe,CACdC,SAAUA,EACVjC,WAAYA,EACZkC,cAAeA,MAGnB5H,eAAA,OAAKC,UAAU,eAAcI,SAAA,CAC3BC,cAAA,UACEqB,KAAK,SACL1B,UAAU,oBACV,kBAAgB,QAAOI,SACxB,+CAGDC,cAAA,UAAQqB,KAAK,SAAS1B,UAAU,kBAAiBI,SAAC,2HAQ9D,C,aC5BMiJ,GAAkB,GAElBC,GAAqB,CACzBC,gBAAgB,OAADd,OAASe,EAAO,KAC/BC,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,YAClBzJ,OAAQ,OACRI,MAAO,QAGHsJ,GAAwB,CAC5BL,gBAAgB,OAADd,OAASoB,EAAe,KACvCJ,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,YAClBzJ,OAAQ,OACRI,MAAO,QAGHwJ,GAAwB,CAC5BP,gBAAgB,OAADd,OAASsB,EAAU,KAClCN,mBAAoB,SACpBC,eAAgB,QAChBC,iBAAkB,YAClBzJ,OAAQ,OACRI,MAAO,QAGH0J,GAAa,CACjBzJ,MAAO,QACPiE,gBAAiB,qBACjBD,aAAc,MACd9D,SAAU,MACV6D,SAAU,WACVsB,IAAK,OACLqE,QAAS,OACTC,WAAY,SACZC,eAAgB,UAGdC,GAAQ,EACRC,GAAW,EACXC,GAAW,EAGTC,GAAQ,SAAC7I,GACb,OAAQA,GACN,IAAK,UACH,MAAM,4BAAN+G,OAAe2B,MACjB,IAAK,aACH,MAAM,iDAAN3B,OAAqB4B,MACvB,IAAK,aACH,MAAM,gBAAN5B,OAAkB6B,MACpB,QACE,MAAO,YAEb,EA0KeE,GAtKQ,SAAHnH,GAA8B,IAAxBoH,EAAgBpH,EAAhBoH,iBACxBC,EAA0BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAlCpH,EAAKsH,EAAA,GAAErH,EAAQqH,EAAA,GACtBE,EAAgCH,mBAAS,GAAEI,EAAAF,YAAAC,EAAA,GAApCrH,EAAQsH,EAAA,GAAEvH,EAAWuH,EAAA,GAEtBC,EAAmBC,iBAAO,MAChCC,EAAkDP,mBAAS,MAAKQ,EAAAN,YAAAK,EAAA,GAAzDE,EAAiBD,EAAA,GAAEE,EAAoBF,EAAA,GAC9CG,EAAgCX,mBAAStB,IAAgBkC,EAAAV,YAAAS,EAAA,GAAlD5D,EAAQ6D,EAAA,GAAEC,EAAWD,EAAA,GAC5BE,EAAoCd,mBAAS,IAAGe,EAAAb,YAAAY,EAAA,GAAzChG,EAAUiG,EAAA,GAAE/D,EAAa+D,EAAA,GAE1BC,EAAa,CACjBnF,OAAQiE,EAAiB,GAAGmB,UAC5BC,YAAapB,EAAiB,GAAGlJ,OA2C7BuK,EAAY,CAChBtC,QAzCoB,SAAHuC,GAAgB,IAAVxM,EAAEwM,EAAFxM,GACvB,OACEQ,eAAA,OAAKE,MAAOqJ,GAAmBlJ,SAAA,CAC7BC,cAAC2L,KAAM,CACLtK,KAAK,SACL4C,SAAU2H,KAASC,KACnB3M,GAAG,OACHU,MAAO,CAAE2F,IAAK,SAEhBvF,cAAA,QAAMJ,MAAO+J,GAAW5J,SAAEb,IAC1Bc,cAAC2L,KAAM,CACLtK,KAAK,SACL4C,SAAU2H,KAASE,MACnB5M,GAAG,QACHU,MAAO,CAAE2F,IAAK,SAEhBvF,cAAC2L,KAAM,CAACtK,KAAK,SAAS4C,SAAU2H,KAASG,IAAK7M,GAAG,UAGvD,EAuBE8M,WArBuB,SAAHC,GAAgB,IAAV/M,EAAE+M,EAAF/M,GAC1B,OACEQ,eAAA,OAAKE,MAAO2J,GAAsBxJ,SAAA,CAChCC,cAAA,QAAMJ,MAAKsM,wBAAA,GAAOvC,IAAU,IAAEpE,IAAK,UAAUxF,SAAEb,IAC/Cc,cAAC2L,KAAM,CAACtK,KAAK,SAAS4C,SAAU2H,KAASO,OAAQjN,GAAG,aAG1D,EAeEwK,WAbuB,SAAH0C,GAAgB,IAAVlN,EAAEkN,EAAFlN,GAC1B,OACEQ,eAAA,OAAKE,MAAO6J,GAAsB1J,SAAA,CAChCC,cAAC2L,KAAM,CAACtK,KAAK,SAAS4C,SAAU2H,KAASO,OAAQjN,GAAG,WACpDc,cAAC2L,KAAM,CAACtK,KAAK,SAAS4C,SAAU2H,KAASG,IAAK7M,GAAG,QACjDc,cAAA,QAAMJ,MAAKsM,wBAAA,GAAOvC,IAAU,IAAEpE,IAAK,SAASxF,SAAEb,MAGpD,GAQMmN,EAAYC,uBAChB,SAACC,GAAM,OACLpB,GAAY,SAACqB,GAAG,OACdC,aAAOP,wBAAC,CAAD,EAEAK,GAAM,IACTG,SAAUtC,EAAiB,GAAGuC,OAC9B/M,MAAO,CACLuG,OAAQiE,EAAiB,GAAGmB,UAC5BC,YAAapB,EAAiB,GAAGlJ,SAGrCsL,EACD,GACF,GACH,CAACrB,IAiCGyB,EAAY3J,GAChBjD,cAACmF,EAAS,CACRlC,MAAOA,EACPC,SAAUA,EACVE,SAAUA,EACVgC,WAAYA,IAYhB,OACE1F,eAAA,OAAKC,UAAU,yDAAwDI,SAAA,CACrEC,cAAC8I,GAAS,CACRzB,SAAUA,EACVjC,WAAYA,EACZkC,cAAeA,IAEjB5H,eAACmN,KAAiB,CAAA9M,SAAA,CAChBC,cAAA,OAAKL,UAAU,sBAAqBI,SAClCC,cAAA,KAAGL,UAAU,kBAAiBI,SAAC,0HAEjCC,cAAC+C,EAAe,CACdG,SAAUA,EACVD,MAAOA,EACPG,SAAUA,EACVD,YAAaA,IAEfnD,cAAA,OAAKL,UAAU,8BAA8BmN,IAAKnC,EAAiB5K,SACjEL,eAACqN,KAEC,CACA1F,SAAUA,EACVgF,UAAWA,EACXW,iBAvEe,SAACC,GAAgB,OACxC9B,GAAY,SAACqB,GAAG,OAAKU,aAAeD,EAAkBT,EAAI,GAAE,EAuEpDW,OArEK,SAACC,GAAkB,OAChCpC,EAAqBoC,EAAoB,EAqEjCC,OA9DK,SAAC/J,GACdA,EAAMgK,iBAEN,IAAMC,EAAkB5C,EAAiB6C,QAAQC,wBAC3CpM,EAAOiC,EAAME,aAAakB,QAAQ,yBAClCT,EAAW8G,EAAkB2C,QAAQ,CACzCC,EAAGrK,EAAMsK,QAAUL,EAAgB9H,KACnCoI,EAAGvK,EAAMwK,QAAUP,EAAgBhI,MAG/BwI,EAAU,CACd7O,GAAIgL,GAAM7I,GACVA,OACA4C,WACAI,KAAM,CAAE2J,MAAO3M,IAGjB8J,GAAY,SAAC8C,GAAE,OAAKA,EAAG7F,OAAO2F,EAAQ,GACxC,EA6CUG,WApES,SAAC5K,GAClBA,EAAMgK,iBACNhK,EAAME,aAAa2K,WAAa,MAClC,EAkEU1C,UAAWA,EACX2C,cAAc,SACdC,oBAAqB/C,EAAWvL,SAAA,CAEhCC,cAACsO,KAAU,CAACC,QAAQ,UACpBvO,cAACwO,KAAQ,IACR5B,YAMb,E,SC5Ne6B,GAxBI,WACjB,OACEzO,cAAA0I,WAAA,CAAA3I,SACEL,eAAA,OACEC,UAAU,sFACVC,MAAO,CACLqE,SAAU,WACVE,gBAAiB,QACjBjE,MAAO,QACPE,SAAU,OACVsO,UAAW,SACXtK,OAAQ,KACRuK,cAAe,UACf5O,SAAA,CACH,gSAECC,cAAA,QAAMJ,MAAO,CAAEQ,SAAU,OAAQF,MAAO,YAAaH,SAAC,4BAM9D,ECpBM6O,I,OAAc,SAAH5L,GAA0D,IAApDoH,EAAgBpH,EAAhBoH,iBAAkByE,EAAQ7L,EAAR6L,SAAUC,EAAO9L,EAAP8L,QAASC,EAAO/L,EAAP+L,QAC1D,OACE/O,cAAA,OAAKL,UAAU,qBAAoBI,SAChCqK,EAAiB9I,KAAI,SAAC0N,GAAS,OAC9BtP,eAAAgJ,WAAA,CAAA3I,SAAA,CACEC,cAAA,OAAKL,UAAU,MAAKI,SAClBL,eAAA,OAAKC,UAAU,MAAKI,SAAA,CACjBiP,EAAU7P,MAAO,IACE,UAAnB6P,EAAU3N,MACTrB,cAAA,SAAOiP,MAAM,aAAYlP,SAAEiP,EAAUzD,YAEnB,UAAnByD,EAAU3N,MACTrB,cAAA,SAAOiP,MAAM,aAAYlP,SAAEiP,EAAU9N,YAPjB8N,EAAU9P,IAWpCc,cAAA,OAAKL,UAAU,MAAKI,SAClBL,eAAA,OAAKC,UAAU,MAAKI,SAAA,CACE,aAAnBiP,EAAU3N,MACTrB,cAAA,OAAKL,UAAU,yBAAwBI,SACrCC,cAAA,SACEL,UAAWqP,EAAUrP,UACrB0B,KAAM2N,EAAU3N,KAChBnC,GAAG,yBACHgQ,QAASF,EAAUrC,OACnBzE,SAAU,SAACC,GACT0G,EAASG,EAAU9P,GAAIiJ,EAAEG,OAAO4G,QAClC,MAIc,UAAnBF,EAAU3N,MACTrB,cAAA,SACEqB,KAAK,QACL4N,MAAM,kCACN/P,GAAG,oBACHgC,MAAO8N,EAAUzD,UACjBpM,MAAM,oBACN+I,SAAU,SAACC,GACT2G,EAAQE,EAAU9P,GAAIiJ,EAAEG,OAAOpH,MACjC,IAGgB,UAAnB8N,EAAU3N,MACTrB,cAAA,SACEqB,KAAK,QACL4N,MAAM,aACNE,IAAI,IACJC,IAAI,IACJlO,MAAO8N,EAAU9N,MACjBgH,SAAU,SAACC,GACT4G,EAAQC,EAAU9P,GAAIiJ,EAAEG,OAAOpH,MACjC,EACAhC,GAAG,wBAKV,KAIX,GAwCemD,GAtCE,SAAHqJ,GAAmD,IAA7CtB,EAAgBsB,EAAhBtB,iBAAkBiF,EAAmB3D,EAAnB2D,oBAqBpC,OACErP,cAAA0I,WAAA,CAAA3I,SACEC,cAAA,OACEL,UAAU,yCACVC,MAAO,CAAE0P,WAAY,QAASvP,SAE9BC,cAAC4O,GAAW,CACVxE,iBAAkBA,EAClByE,SA5B8B,SAACU,EAAYC,GACjD,IAAMC,EAAmBpH,YAAO+B,GACfqF,EAAoBC,MAAK,SAACC,GAAC,OAAKA,EAAEzQ,KAAOqQ,CAAU,IAC3D5C,OAAS6C,EAClBH,EAAoBI,EACtB,EAwBQX,QAtBkB,SAACS,EAAYK,GACrC,IAAMC,EAAQxH,YAAO+B,GACPyF,EAASH,MAAK,SAACC,GAAC,OAAKA,EAAEzQ,KAAOqQ,CAAU,IAChDhE,UAAYqE,EAClBP,EAAoBQ,EACtB,EAkBQd,QAhBkB,SAACQ,EAAYO,GACrC,IAAMC,EAAQ1H,YAAO+B,GACP2F,EAASL,MAAK,SAACC,GAAC,OAAKA,EAAEzQ,KAAOqQ,CAAU,IAChDrO,MAAQ4O,EACdT,EAAoBU,EACtB,OAgBF,ECtGe,IACb,CACE7Q,GAAI,QACJC,MAAO,sKACPkC,KAAM,WACN1B,UAAW,mBACXgN,QAAQ,GAEV,CACEzN,GAAI,QACJC,MAAO,oLACPkC,KAAM,QACN1B,UAAW,kCACX4L,UAAW,QAEb,CACErM,GAAI,QACJC,MAAO,kFACPkC,KAAM,WACN1B,UAAW,mBACXgN,QAAQ,GAEV,CACEzN,GAAI,QACJC,MAAO,sEACPkC,KAAM,QACN1B,UAAW,mBACXuB,MAAO,ICOI8O,GAlCG,WAChB,OACEhQ,cAAA0I,WAAA,CAAA3I,SACEC,cAAA,OACEL,UAAU,2EACVC,MAAO,CACLqE,SAAU,WACV/D,MAAO,QACPE,SAAU,OACVsO,UAAW,SACXC,cAAe,UACf5O,SAEFL,eAAA,OAAKuP,MAAM,cAAalP,SAAA,CACtBC,cAAA,SACEqB,KAAK,OACL4N,MAAM,eACN/P,GAAG,mBACH,mBAAiB,wBACjB,aAAW,WAEbc,cAAA,UACEiP,MAAM,4BACN5N,KAAK,SACLnC,GAAG,wBAAuBa,SAC3B,sGAOX,ECpBe,SAASkQ,KACtB,IAAA5F,EAAgDC,mBAAS4F,IAAkB3F,EAAAC,YAAAH,EAAA,GAApED,EAAgBG,EAAA,GAAE8E,EAAmB9E,EAAA,GAC5C,OACE7K,eAAA,OAAKC,UAAU,oBAAmBI,SAAA,CAChCL,eAACyQ,IAAM,CAAApQ,SAAA,CACLC,cAAA,OACEL,UAAU,4CACVY,KAAK,QACL,aAAW,yBACXX,MAAO,CAAEwQ,aAAc,qBAAsBrQ,SAE7CC,cAAC6B,EAAM,CAACE,KAAMsO,MAEhB3Q,eAAC4Q,KAAM,CAAAvQ,SAAA,CACLC,cAACuQ,KAAK,CAACC,KAAK,IAAIC,QAASzQ,cAAC8C,EAAc,MACxC9C,cAACuQ,KAAK,CACJC,KAAK,YACLC,QAASzQ,cAACmK,GAAc,CAACC,iBAAkBA,MAE7CpK,cAACuQ,KAAK,CAACC,KAAK,aAAaC,QAASzQ,cAACgQ,GAAS,MAC5ChQ,cAACuQ,KAAK,CACJC,KAAK,YACLC,QACEzQ,cAACqC,GAAQ,CACP+H,iBAAkBA,EAClBiF,oBAAqBA,MAI3BrP,cAACuQ,KAAK,CAACC,KAAK,QAAQC,QAASzQ,cAACyO,GAAU,YAG5CzO,cAACP,EAAM,MAGb,CC3CAiR,IAASC,OAAO3Q,cAACiQ,GAAG,IAAKW,SAASC,eAAe,Q","file":"static/js/main.100586d0.chunk.js","sourcesContent":["export default [\r\n  {\r\n    id: \"01\",\r\n    title: \"Меню\",\r\n    text: [\"Меню\", \"Сохранить модель\", \"Закрыть модель\"],\r\n    link: {\r\n      Меню: \"/\",\r\n      \"Сохранить модель\": \"/SaveModel\",\r\n      \"Закрыть модель\": \"/\"\r\n    }\r\n  }\r\n];\r\n","//import react from \"react\";\r\nimport \"./style.css\";\r\n\r\nlet today = new Date();\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div\r\n      className=\"borderTop fixed-bottom bg-white d-flex justify-content-between align-items-center\"\r\n      style={{ height: \"20px\", paddingRight: \"20px\" }}\r\n    >\r\n      <div style={{ width: \"25%\" }}></div>\r\n      <h4\r\n        style={{\r\n          color: \"#228D00\",\r\n          fontFamily: \"Calibri\",\r\n          fontSize: 16,\r\n          marginTop: \"5px\"\r\n        }}\r\n      >\r\n        VA VKO {today.getFullYear()}\r\n      </h4>\r\n      <div className=\"progress\" style={{ width: \"25%\" }}>\r\n        <div\r\n          className=\"progress-bar progress-bar-striped progress-bar-animated bg-success\"\r\n          role=\"progressbar\"\r\n          style={{ width: \"100%\" }}\r\n          aria-valuenow=\"100\"\r\n          aria-valuemin=\"0\"\r\n          aria-valuemax=\"100\"\r\n        >\r\n          100%\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass ButtonHeader extends Component {\r\n  render() {\r\n    const { text } = this.props;\r\n    return (\r\n      <div\r\n        className=\"btn-group ms-1 mt-1 mb-1\"\r\n        role=\"group\"\r\n        aria-label=\"Basic example\"\r\n      >\r\n        <button\r\n          className=\"btn btn-outline-success btn-sm dropdown-toggle\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"dropdown\"\r\n          aria-expanded=\"false\"\r\n        >\r\n          {text.title}\r\n        </button>\r\n        <ul className=\"dropdown-menu\">\r\n          {text.text.map((subtext) => (\r\n            <NavLink to={text.link[subtext]} key={subtext.toString()}>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href={text.link[subtext]}>\r\n                  {subtext}\r\n                </a>\r\n              </li>\r\n            </NavLink>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ButtonHeader;\r\n","import ButtonHeader from \"./ButtonHeader\";\r\n\r\nexport default function Header(props) {\r\n  const prElem = props.name;\r\n  const btnHeader = prElem.map((btnHead) => (\r\n    <li key={btnHead.id} className=\"nav-item\">\r\n      {<ButtonHeader text={btnHead} />}\r\n    </li>\r\n  ));\r\n  return <ul className=\"btn-group nav\">{btnHeader}</ul>;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/New_model.6e03a858.svg\";","export default __webpack_public_path__ + \"static/media/Download_model.60e4e693.svg\";","export default __webpack_public_path__ + \"static/media/Settings.d2849815.svg\";","export default __webpack_public_path__ + \"static/media/Help.ea7709f5.svg\";","export default __webpack_public_path__ + \"static/media/Exit.3b4b9ff0.svg\";","import New_model from \"../Source/New_model.svg\";\r\nimport Dowload_model from \"../Source/Download_model.svg\";\r\nimport Settings from \"../Source/Settings.svg\";\r\nimport Help from \"../Source/Help.svg\";\r\nimport Exit from \"../Source/Exit.svg\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport default function ContentButtons() {\r\n  const buttonsElem = [\r\n    { title: \"Новая модель\", link: New_model, href: \"/NewModel\" },\r\n    { title: \"Загрузить модель\", link: Dowload_model, href: \"/LoadModel\" },\r\n    { title: \"Настройки\", link: Settings, href: \"/Settings\" },\r\n    { title: \"Справка\", link: Help, href: \"/Help\" },\r\n    { title: \"Выход\", link: Exit, href: \"/Exit\" }\r\n  ];\r\n\r\n  const btnElm = buttonsElem.map((buttonElem, i) => (\r\n    <NavLink to={buttonElem.href} key={i}>\r\n      <button\r\n        key={buttonElem.title}\r\n        type=\"button\"\r\n        className=\"btn btn-lg bg-light text-success text-start mb-3 btn-outline-success\"\r\n      >\r\n        {buttonElem.title}\r\n        <img src={buttonElem.link} className=\"ps-3\" alt={buttonElem.title} />\r\n      </button>\r\n    </NavLink>\r\n  ));\r\n\r\n  return <div className=\"btn-group-vertical\">{btnElm}</div>;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Logo_vavko.5e571253.png\";","import Logo from \"../Source/Logo_vavko.png\";\r\nimport \"../style.css\";\r\n\r\nexport default function ContentLogo() {\r\n  return (\r\n    <div className=\"logo-wrapper\">\r\n      <img\r\n        src={Logo}\r\n        className=\"img-fluid position-absolute top-50 end-0 translate-middle-y\"\r\n        alt=\"Логотип\"\r\n      ></img>\r\n    </div>\r\n  );\r\n}\r\n","import { Component } from \"react\";\r\nimport ContentButtons from \"./ContentPageOne/ContentButtons\";\r\nimport ContentLogo from \"./ContentPageOne/ContentLogo\";\r\nimport \"./style.css\";\r\n\r\nclass ContentPageOne extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"content-bg vh-100 vw-100 overflow-hidden\">\r\n        <ContentButtons />\r\n        <ContentLogo />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContentPageOne;\r\n","export default __webpack_public_path__ + \"static/media/Arm.97e82f01.svg\";","export default __webpack_public_path__ + \"static/media/Server_group.22d1df14.svg\";","export default __webpack_public_path__ + \"static/media/Switch.f1c467d1.svg\";","import \"../PageTwoStyles.css\";\r\nimport arm from \"../Source/Arm.svg\";\r\nimport servergroup from \"../Source/Server_group.svg\";\r\nimport kommutator from \"../Source/Switch.svg\";\r\n\r\nexport const DragElementArea = ({ chart, setChart, timeTest, setTimeTest }) => {\r\n  const onDragStart = (event, nodeType) => {\r\n    event.dataTransfer.setData(\"application/reactflow\", nodeType);\r\n    event.dataTransfer.effectAllowed = \"move\";\r\n  };\r\n\r\n  chart &&\r\n    setTimeTest(prompt(\"Введите время функционирования системы (Часы)\", \"\"));\r\n\r\n  return (\r\n    <div className=\"content contentBg elementArea\">\r\n      <img\r\n        className=\"rounded mx-auto d-block pt-3\"\r\n        src={arm}\r\n        alt=\"Автоматизированное рабочее место\"\r\n        style={{ cursor: \"pointer\" }}\r\n        onDragStart={(event) => {\r\n          return onDragStart(event, \"armNode\");\r\n        }}\r\n      ></img>\r\n      <p className=\"text-center pb-3\" style={{ color: \"white\" }}>\r\n        АРМ\r\n      </p>\r\n      <img\r\n        className=\"rounded mx-auto d-block\"\r\n        src={servergroup}\r\n        alt=\"серверная группа\"\r\n        style={{ cursor: \"pointer\" }}\r\n        onDragStart={(event) => {\r\n          return onDragStart(event, \"serverNode\");\r\n        }}\r\n      ></img>\r\n      <p className=\"text-center pb-3\" style={{ color: \"white\" }}>\r\n        Серверная группа\r\n      </p>\r\n      <img\r\n        className=\"rounded mx-auto d-block\"\r\n        src={kommutator}\r\n        alt=\"Коммутатор-Switch\"\r\n        style={{ cursor: \"pointer\" }}\r\n        onDragStart={(event) => onDragStart(event, \"switchNode\")}\r\n      ></img>\r\n      <p className=\"text-center pb-3\" style={{ color: \"white\" }}>\r\n        Коммутатор-Switch\r\n      </p>\r\n      <div className=\"d-grid gap-2 mb-0\">\r\n        <button\r\n          className=\"btn btn-success\"\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setChart(!chart);\r\n          }}\r\n        >\r\n          {chart ? \"Закрыть окно\" : \"Моделировать\"}\r\n        </button>\r\n        <button\r\n          className=\"btn btn-warning text-white\"\r\n          data-bs-toggle=\"modal\"\r\n          data-bs-target=\"#exampleModal\"\r\n        >\r\n          Ввод данных\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  Radar,\r\n  RadarChart,\r\n  PolarGrid,\r\n  PolarAngleAxis,\r\n  PolarRadiusAxis,\r\n  ResponsiveContainer\r\n} from \"recharts\";\r\n\r\nconst style = {\r\n  position: \"relative\",\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n  borderRadius: \"10px\",\r\n  backgroundColor: \"#FFFAFA\",\r\n  zIndex: \"10\"\r\n};\r\n\r\nconst data = [\r\n  {\r\n    subject: \"Кол-во отказов\",\r\n    A: 120,\r\n    B: 110,\r\n    fullMark: 150\r\n  },\r\n  {\r\n    subject: \"ИО\",\r\n    A: 98,\r\n    B: 130,\r\n    fullMark: 150\r\n  },\r\n  {\r\n    subject: \"Ср ВБР ФГ\",\r\n    A: 86,\r\n    B: 130,\r\n    fullMark: 150\r\n  },\r\n  {\r\n    subject: \"Кол-во тестов\",\r\n    A: 65,\r\n    B: 85,\r\n    fullMark: 150\r\n  }\r\n];\r\n\r\nfunction getRandomInt(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min; //Максимум не включается, минимум включается\r\n}\r\n\r\nfunction calcProb(time) {\r\n  return Math.exp(-1.765 * Math.pow(10, -5) * 10 * time);\r\n}\r\n\r\nconst getData = (value) => {\r\n  let mas = [];\r\n  let mid = 0;\r\n  while (value--) {\r\n    mid++;\r\n    mas.push({\r\n      uv: calcProb(mid)\r\n      // amt: getRandomInt(10, 100)\r\n    });\r\n  }\r\n\r\n  return mas;\r\n};\r\n\r\nexport default function ChartPage({ timeTest, valueInput }) {\r\n  return (\r\n    <div style={style} className=\"container\">\r\n      <div className=\"row row-cols-2\">\r\n        <div className=\"col text-center\" style={{ color: \"green\" }}>\r\n          Зависимость среднего кол-ва отказов ФГ во времени\r\n        </div>\r\n        <div className=\"col\" style={{ color: \"green\" }}>\r\n          Зависимость интенсивности отказов от времени\r\n        </div>\r\n        <LineChart\r\n          className=\"col\"\r\n          width={500}\r\n          height={300}\r\n          data={getData(timeTest)}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n        <LineChart\r\n          className=\"col\"\r\n          width={500}\r\n          height={300}\r\n          data={getData(timeTest)}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n        <span className=\"col text-center\" style={{ color: \"green\" }}>\r\n          Зависимость вероятности безотказной работы от времени\r\n        </span>\r\n        <span className=\"col\" style={{ color: \"green\" }}>\r\n          График радар показателей ФГ\r\n        </span>\r\n        <LineChart\r\n          className=\"col\"\r\n          width={500}\r\n          height={300}\r\n          data={getData(timeTest)}\r\n          margin={{\r\n            top: 5,\r\n            right: 30,\r\n            left: 20,\r\n            bottom: 5\r\n          }}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"3 3\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\r\n        </LineChart>\r\n        <ResponsiveContainer width=\"30%\" height={300} className=\"col\">\r\n          <RadarChart cx=\"50%\" cy=\"30%\" outerRadius=\"50%\" data={data}>\r\n            <PolarGrid />\r\n            <PolarAngleAxis dataKey=\"subject\" />\r\n            <PolarRadiusAxis />\r\n            <Radar\r\n              name=\"Mike\"\r\n              dataKey=\"A\"\r\n              stroke=\"#8884d8\"\r\n              fill=\"#8884d8\"\r\n              fillOpacity={0.6}\r\n            />\r\n          </RadarChart>\r\n        </ResponsiveContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Arm from \"../Source/Arm.svg\";\r\nimport Switch from \"../Source/Switch.svg\";\r\nimport ServerElem from \"../Source/Server_group.svg\";\r\n\r\nexport default [\r\n  {\r\n    id: \"server\",\r\n    name: \"Серверные группы\",\r\n    srcImg: ServerElem,\r\n    subName: [\r\n      \"№\",\r\n      \"Наименование элемента\",\r\n      \"Функциональная группа\",\r\n      \"Цель соединения\",\r\n      \"Интенсивность отказов\",\r\n      \"Среднее время восстановления\",\r\n      \"Средняя наработка между отказами\"\r\n    ]\r\n  },\r\n  {\r\n    id: \"switch\",\r\n    name: \"Коммутаторы Switch\",\r\n    srcImg: Switch,\r\n    subName: [\r\n      \"№\",\r\n      \"Наименование элемента\",\r\n      \"Функциональная группа\",\r\n      \"Цель соединения\",\r\n      \"Интенсивность отказов\",\r\n      \"Среднее время восстановления\",\r\n      \"Средняя наработка между отказами\"\r\n    ]\r\n  },\r\n  {\r\n    id: \"arm\",\r\n    name: \"Функциональные группы (АРМ)\",\r\n    srcImg: Arm,\r\n    subName: [\r\n      \"№\",\r\n      \"Наименование элемента\",\r\n      \"Функциональная группа\",\r\n      \"Цель соединения\",\r\n      \"Интенсивность отказов\",\r\n      \"Среднее время восстановления\",\r\n      \"Средняя наработка между отказами\"\r\n    ]\r\n  }\r\n];\r\n","import headersElements from \"./headersElements\";\r\n\r\nconst ModalComponents = ({ elements, valueInput, setValueInput }) => {\r\n  let nodes = elements.filter((elem) => {\r\n    return \"type\" in elem;\r\n  });\r\n\r\n  let armArr = nodes.filter((elem) => {\r\n    return elem.type === \"armNode\";\r\n  });\r\n\r\n  let switchArr = nodes.filter((elem) => {\r\n    return elem.type === \"switchNode\";\r\n  });\r\n\r\n  let serverArr = nodes.filter((elem) => {\r\n    return elem.type === \"serverNode\";\r\n  });\r\n\r\n  let edges = elements.filter((elem) => {\r\n    return \"source\" in elem;\r\n  });\r\n\r\n  const switchElements = (type) => {\r\n    switch (type) {\r\n      case \"arm\":\r\n        return (\r\n          <tbody>\r\n            {armArr.map((elem, i) => (\r\n              <tr key={i}>\r\n                <th scope=\"row\">{i + 1}</th>\r\n                <td>{elem.id}</td>\r\n                <td>\r\n                  <select\r\n                    className=\"form-select form-select-sm\"\r\n                    aria-label=\".form-select-sm пример\"\r\n                  >\r\n                    <option selected>Выбор...</option>\r\n                    {armArr.map((_, i) => (\r\n                      <option value={i + 1}>{i + 1}</option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n                <td>\r\n                  <ol className=\"list-group list-group-numbered\">\r\n                    {<li className=\"list-group-item\">A list item</li>}\r\n                  </ol>\r\n                </td>\r\n                <td>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Введите данные...\"\r\n                      aria-label=\"Recipient's username\"\r\n                      aria-describedby=\"basic-addon2\"\r\n                      onChange={(e) =>\r\n                        setValueInput([...valueInput, { i: e.target.value }])\r\n                      }\r\n                    />\r\n                    <span className=\"input-group-text\" id=\"basic-addon2\">\r\n                      λ(10<sup>-5</sup>)\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Введите данные...\"\r\n                      aria-label=\"Recipient's username\"\r\n                      aria-describedby=\"basic-addon2\"\r\n                    />\r\n                    <span className=\"input-group-text\" id=\"basic-addon2\">\r\n                      τ(часы)\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Введите данные...\"\r\n                      aria-label=\"Recipient's username\"\r\n                      aria-describedby=\"basic-addon2\"\r\n                    />\r\n                    <span className=\"input-group-text\" id=\"basic-addon2\">\r\n                      T(часы)\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        );\r\n\r\n      case \"server\":\r\n        return (\r\n          <tbody>\r\n            {serverArr.map((elem, i) => (\r\n              <tr key={i}>\r\n                <th scope=\"row\">{i + 1}</th>\r\n                <td>{`Серверная группа №${elem.id[elem.id.length - 1]}`}</td>\r\n                <td>\r\n                  <select\r\n                    className=\"form-select form-select-sm\"\r\n                    aria-label=\".form-select-sm пример\"\r\n                  >\r\n                    <option selected>Выбор...</option>\r\n                    {serverArr.map((_, i) => (\r\n                      <option value={i + 1}>{i + 1}</option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n                <td>Серверная группа №1</td>\r\n                <td>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Введите данные...\"\r\n                      aria-label=\"Recipient's username\"\r\n                      aria-describedby=\"basic-addon2\"\r\n                    />\r\n                    <span className=\"input-group-text\" id=\"basic-addon2\">\r\n                      λ(10<sup>-5</sup>)\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Введите данные...\"\r\n                      aria-label=\"Recipient's username\"\r\n                      aria-describedby=\"basic-addon2\"\r\n                    />\r\n                    <span className=\"input-group-text\" id=\"basic-addon2\">\r\n                      τ(часы)\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Введите данные...\"\r\n                      aria-label=\"Recipient's username\"\r\n                      aria-describedby=\"basic-addon2\"\r\n                    />\r\n                    <span className=\"input-group-text\" id=\"basic-addon2\">\r\n                      T(часы)\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        );\r\n\r\n      case \"switch\":\r\n        return (\r\n          <tbody>\r\n            {switchArr.map((elem, i) => (\r\n              <tr key={i}>\r\n                <th scope=\"row\">{i + 1}</th>\r\n                <td>{`Коммутатор-Switch №${elem.id[elem.id.length - 1]}`}</td>\r\n                <td>\r\n                  <select\r\n                    className=\"form-select form-select-sm\"\r\n                    aria-label=\".form-select-sm пример\"\r\n                  >\r\n                    <option selected>Выбор...</option>\r\n                    {switchArr.map((_, i) => (\r\n                      <option value={i + 1}>{i + 1}</option>\r\n                    ))}\r\n                  </select>\r\n                </td>\r\n                <td>Серверная группа №1</td>\r\n                <td>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Введите данные...\"\r\n                      aria-label=\"Recipient's username\"\r\n                      aria-describedby=\"basic-addon2\"\r\n                    />\r\n                    <span className=\"input-group-text\" id=\"basic-addon2\">\r\n                      λ(10<sup>-5</sup>)\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Введите данные...\"\r\n                      aria-label=\"Recipient's username\"\r\n                      aria-describedby=\"basic-addon2\"\r\n                    />\r\n                    <span className=\"input-group-text\" id=\"basic-addon2\">\r\n                      τ(часы)\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <div className=\"input-group mb-3\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Введите данные...\"\r\n                      aria-label=\"Recipient's username\"\r\n                      aria-describedby=\"basic-addon2\"\r\n                    />\r\n                    <span className=\"input-group-text\" id=\"basic-addon2\">\r\n                      T(часы)\r\n                    </span>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        );\r\n\r\n      default:\r\n        return (\r\n          <tbody>\r\n            <tr>\r\n              <th scope=\"row\"></th>\r\n              <td>Добавьте элементы!</td>\r\n            </tr>\r\n          </tbody>\r\n        );\r\n    }\r\n  };\r\n\r\n  console.log(valueInput);\r\n\r\n  return (\r\n    <>\r\n      {headersElements.map((elem, i) => (\r\n        <div className=\"accordion\" id=\"accordionExample\" key={i}>\r\n          <div className=\"accordion-item\">\r\n            <h2 className=\"accordion-header\" id={`panelsStayOpen-heading${i}`}>\r\n              <button\r\n                className=\"accordion-button\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"collapse\"\r\n                data-bs-target={`#panelsStayOpen-${i}`}\r\n                aria-expanded=\"true\"\r\n                aria-controls={`#panelsStayOpen-${i}`}\r\n              >\r\n                {elem.name}\r\n                <img\r\n                  src={elem.srcImg}\r\n                  alt={elem.name}\r\n                  style={{ marginLeft: \"20px\" }}\r\n                ></img>\r\n              </button>\r\n            </h2>\r\n            <div\r\n              id={`panelsStayOpen-${i}`}\r\n              className=\"accordion-collapse collapse show\"\r\n              aria-labelledby={`panelsStayOpen-heading${i}`}\r\n            >\r\n              <div className=\"accordion-body\">\r\n                <table className=\"table table-success table-hover\">\r\n                  <thead>\r\n                    <tr>\r\n                      {elem.subName.map((subElem, i) => (\r\n                        <th scope=\"col\" className=\"align-middle\" key={i}>\r\n                          {subElem}\r\n                        </th>\r\n                      ))}\r\n                    </tr>\r\n                  </thead>\r\n                  {switchElements(elem.id)}\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalComponents;\r\n","import ModalComponents from \"./ModalComponents\";\r\n\r\nexport default function MWHeaders({ elements, valueInput, setValueInput }) {\r\n  return (\r\n    <div\r\n      className=\"modal fade\"\r\n      id=\"exampleModal\"\r\n      tabindex=\"-1\"\r\n      aria-labelledby=\"exampleModalLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog modal-fullscreen\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n              Ввод данных для функциональных элементов:\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Закрыть\"\r\n            ></button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <ModalComponents\r\n              elements={elements}\r\n              valueInput={valueInput}\r\n              setValueInput={setValueInput}\r\n            />\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-secondary\"\r\n              data-bs-dismiss=\"modal\"\r\n            >\r\n              Закрыть\r\n            </button>\r\n            <button type=\"button\" className=\"btn btn-primary\">\r\n              Сохранить изменения\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useCallback, useRef } from \"react\";\r\nimport \"./PageTwoStyles.css\";\r\nimport { DragElementArea } from \"./ContentPageTwo/DragElementArea\";\r\nimport armNode from \"./Source/Arm.svg\";\r\nimport serverGroupNode from \"./Source/Server_group.svg\";\r\nimport switchNode from \"./Source/Switch.svg\";\r\nimport ChartPage from \"./ContentPageTwo/ChartPage\";\r\nimport MWHeaders from \"./ModalWindowElements/MWHeaders\";\r\n\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  addEdge,\r\n  removeElements,\r\n  Controls,\r\n  Position,\r\n  Handle,\r\n  Background\r\n} from \"react-flow-renderer\";\r\n\r\nconst initialElements = [];\r\n\r\nconst customArmNodeStyle = {\r\n  backgroundImage: `url(${armNode})`,\r\n  backgroundPosition: \"center\",\r\n  backgroundSize: \"cover\",\r\n  backgroundRepeat: \"no-repeat\",\r\n  height: \"40px\",\r\n  width: \"50px\"\r\n};\r\n\r\nconst customServerNodeStyle = {\r\n  backgroundImage: `url(${serverGroupNode})`,\r\n  backgroundPosition: \"center\",\r\n  backgroundSize: \"cover\",\r\n  backgroundRepeat: \"no-repeat\",\r\n  height: \"40px\",\r\n  width: \"50px\"\r\n};\r\n\r\nconst customSwitchNodeStyle = {\r\n  backgroundImage: `url(${switchNode})`,\r\n  backgroundPosition: \"center\",\r\n  backgroundSize: \"cover\",\r\n  backgroundRepeat: \"no-repeat\",\r\n  height: \"55px\",\r\n  width: \"50px\"\r\n};\r\n\r\nconst styleLabel = {\r\n  color: \"white\",\r\n  backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n  borderRadius: \"4px\",\r\n  fontSize: \"8px\",\r\n  position: \"relative\",\r\n  top: \"41px\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\"\r\n};\r\n\r\nlet idArm = 1;\r\nlet idServer = 1;\r\nlet idSwitch = 1;\r\n//const getId = () => `dndnode_${id++}`;\r\n\r\nconst getId = (type) => {\r\n  switch (type) {\r\n    case \"armNode\":\r\n      return `Арм №${idArm++}`;\r\n    case \"serverNode\":\r\n      return `Серв. гр. №${idServer++}`;\r\n    case \"switchNode\":\r\n      return `Switch №${idSwitch++}`;\r\n    default:\r\n      return \"Error 404\";\r\n  }\r\n};\r\n\r\n////------->главная функция\r\n\r\nconst ContentPageTwo = ({ settingPropertie }) => {\r\n  const [chart, setChart] = useState(false);\r\n  const [timeTest, setTimeTest] = useState(0);\r\n\r\n  const reactFlowWrapper = useRef(null);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n  const [elements, setElements] = useState(initialElements);\r\n  const [valueInput, setValueInput] = useState([]);\r\n\r\n  const styleLines = {\r\n    stroke: settingPropertie[1].colorLine,\r\n    strokeWidth: settingPropertie[3].value\r\n  };\r\n\r\n  const CustomArmNode = ({ id }) => {\r\n    return (\r\n      <div style={customArmNodeStyle}>\r\n        <Handle\r\n          type=\"target\"\r\n          position={Position.Left}\r\n          id=\"Left\"\r\n          style={{ top: \"50%\" }}\r\n        />\r\n        <span style={styleLabel}>{id}</span>\r\n        <Handle\r\n          type=\"source\"\r\n          position={Position.Right}\r\n          id=\"Right\"\r\n          style={{ top: \"50%\" }}\r\n        />\r\n        <Handle type=\"target\" position={Position.Top} id=\"Top\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const CustomServerNode = ({ id }) => {\r\n    return (\r\n      <div style={customServerNodeStyle}>\r\n        <span style={{ ...styleLabel, top: \"-11px\" }}>{id}</span>\r\n        <Handle type=\"source\" position={Position.Bottom} id=\"Bottom\" />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const CustomSwitchNode = ({ id }) => {\r\n    return (\r\n      <div style={customSwitchNodeStyle}>\r\n        <Handle type=\"source\" position={Position.Bottom} id=\"Bottom\" />\r\n        <Handle type=\"target\" position={Position.Top} id=\"Top\" />\r\n        <span style={{ ...styleLabel, top: \"38px\" }}>{id}</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const nodeTypes = {\r\n    armNode: CustomArmNode,\r\n    serverNode: CustomServerNode,\r\n    switchNode: CustomSwitchNode\r\n  };\r\n\r\n  const onConnect = useCallback(\r\n    (params) =>\r\n      setElements((els) =>\r\n        addEdge(\r\n          {\r\n            ...params,\r\n            animated: settingPropertie[2].active,\r\n            style: {\r\n              stroke: settingPropertie[1].colorLine,\r\n              strokeWidth: settingPropertie[3].value\r\n            }\r\n          },\r\n          els\r\n        )\r\n      ),\r\n    [setElements]\r\n  );\r\n  const onElementsRemove = (elementsToRemove) =>\r\n    setElements((els) => removeElements(elementsToRemove, els));\r\n\r\n  const onLoad = (_reactFlowInstance) =>\r\n    setReactFlowInstance(_reactFlowInstance);\r\n\r\n  const onDragOver = (event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = \"move\";\r\n  };\r\n\r\n  const onDrop = (event) => {\r\n    event.preventDefault();\r\n\r\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n    const type = event.dataTransfer.getData(\"application/reactflow\");\r\n    const position = reactFlowInstance.project({\r\n      x: event.clientX - reactFlowBounds.left,\r\n      y: event.clientY - reactFlowBounds.top\r\n    });\r\n\r\n    const newNode = {\r\n      id: getId(type),\r\n      type,\r\n      position,\r\n      data: { label: type }\r\n    };\r\n\r\n    setElements((es) => es.concat(newNode));\r\n  };\r\n\r\n  const chartPage = chart && (\r\n    <ChartPage\r\n      chart={chart}\r\n      setChart={setChart}\r\n      timeTest={timeTest}\r\n      valueInput={valueInput}\r\n    />\r\n  );\r\n\r\n  /*elements.forEach((item) => {\r\n      if (\"type\" in item) {\r\n        setEdges([...edges, item])\r\n      } else {\r\n        setNodes([...nodes, item])\r\n      }\r\n    })*/\r\n\r\n  return (\r\n    <div className=\"contents dndflow dndflow vh-100 vw-100 overflow-hidden\">\r\n      <MWHeaders\r\n        elements={elements}\r\n        valueInput={valueInput}\r\n        setValueInput={setValueInput}\r\n      />\r\n      <ReactFlowProvider>\r\n        <div className=\"titleArea contentBg\">\r\n          <p className=\"text-center p-2\">Инструменты создания</p>\r\n        </div>\r\n        <DragElementArea\r\n          setChart={setChart}\r\n          chart={chart}\r\n          timeTest={timeTest}\r\n          setTimeTest={setTimeTest}\r\n        />\r\n        <div className=\"reactflow-wrapper contentBg\" ref={reactFlowWrapper}>\r\n          <ReactFlow\r\n            // timeTest={timeTest}\r\n            // setTimeTest={setTimeTest}\r\n            elements={elements}\r\n            onConnect={onConnect}\r\n            onElementsRemove={onElementsRemove}\r\n            onLoad={onLoad}\r\n            onDrop={onDrop}\r\n            onDragOver={onDragOver}\r\n            nodeTypes={nodeTypes}\r\n            deleteKeyCode=\"Delete\"\r\n            connectionLineStyle={styleLines}\r\n          >\r\n            <Background variant=\"lines\" />\r\n            <Controls />\r\n            {chartPage}\r\n          </ReactFlow>\r\n        </div>\r\n      </ReactFlowProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContentPageTwo;\r\n","const ExitWindow = () => {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"d-flex justify-content-center align-items-center .bg-dark.bg-gradient vw-100 vh-100\"\r\n        style={{\r\n          position: \"relative\",\r\n          backgroundColor: \"black\",\r\n          color: \"white\",\r\n          fontSize: \"24px\",\r\n          textAlign: \"center\",\r\n          zIndex: 9999,\r\n          flexDirection: \"column\"\r\n        }}\r\n      >\r\n        Вы вышли из программы, можете закрыть вкладку браузера.\r\n        <span style={{ fontSize: \"12px\", color: \"GrayText\" }}>\r\n          Dev: Sokolik Alexey\r\n        </span>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExitWindow;\r\n","import \"./Setting.css\";\r\n\r\nconst SettingItem = ({ settingPropertie, onToggle, onColor, onRange }) => {\r\n  return (\r\n    <div className=\"row row-cols-2 g-2\">\r\n      {settingPropertie.map((propertie) => (\r\n        <>\r\n          <div className=\"col\" key={propertie.id}>\r\n            <div className=\"p-3\">\r\n              {propertie.title}{\" \"}\r\n              {propertie.type === \"color\" && (\r\n                <label class=\"form-label\">{propertie.colorLine}</label>\r\n              )}\r\n              {propertie.type === \"range\" && (\r\n                <label class=\"form-label\">{propertie.value}</label>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"col\">\r\n            <div className=\"p-3\">\r\n              {propertie.type === \"checkbox\" && (\r\n                <div className=\"form-check form-switch\">\r\n                  <input\r\n                    className={propertie.className}\r\n                    type={propertie.type}\r\n                    id=\"flexSwitchCheckDefault\"\r\n                    checked={propertie.active}\r\n                    onChange={(e) => {\r\n                      onToggle(propertie.id, e.target.checked);\r\n                    }}\r\n                  ></input>\r\n                </div>\r\n              )}\r\n              {propertie.type === \"color\" && (\r\n                <input\r\n                  type=\"color\"\r\n                  class=\"form-control form-control-color\"\r\n                  id=\"exampleColorInput\"\r\n                  value={propertie.colorLine}\r\n                  title=\"Choose your color\"\r\n                  onChange={(e) => {\r\n                    onColor(propertie.id, e.target.value);\r\n                  }}\r\n                ></input>\r\n              )}\r\n              {propertie.type === \"range\" && (\r\n                <input\r\n                  type=\"range\"\r\n                  class=\"form-range\"\r\n                  min=\"2\"\r\n                  max=\"5\"\r\n                  value={propertie.value}\r\n                  onChange={(e) => {\r\n                    onRange(propertie.id, e.target.value);\r\n                  }}\r\n                  id=\"customRange2\"\r\n                ></input>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Settings = ({ settingPropertie, setSettingPropertie }) => {\r\n  const handleToggleSettingsPropertie = (settingsId, nextActive) => {\r\n    const newSettingPropertie = [...settingPropertie];\r\n    const settings = newSettingPropertie.find((a) => a.id === settingsId);\r\n    settings.active = nextActive;\r\n    setSettingPropertie(newSettingPropertie);\r\n  };\r\n\r\n  const handleToggleColor = (settingsId, nextColor) => {\r\n    const newColor = [...settingPropertie];\r\n    const color = newColor.find((a) => a.id === settingsId);\r\n    color.colorLine = nextColor;\r\n    setSettingPropertie(newColor);\r\n  };\r\n\r\n  const handleToggleRange = (settingsId, nextRange) => {\r\n    const newRange = [...settingPropertie];\r\n    const range = newRange.find((a) => a.id === settingsId);\r\n    range.value = nextRange;\r\n    setSettingPropertie(newRange);\r\n  };\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container d-flex justify-content-start\"\r\n        style={{ paddingTop: \"40px\" }}\r\n      >\r\n        <SettingItem\r\n          settingPropertie={settingPropertie}\r\n          onToggle={handleToggleSettingsPropertie}\r\n          onColor={handleToggleColor}\r\n          onRange={handleToggleRange}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","export default [\r\n  {\r\n    id: \"01-id\",\r\n    title: \"Повышение производительности\",\r\n    type: \"checkbox\",\r\n    className: \"form-check-input\",\r\n    active: false\r\n  },\r\n  {\r\n    id: \"02-id\",\r\n    title: \"Цвет линиий соединения элементов\",\r\n    type: \"color\",\r\n    className: \"form-control form-control-color\",\r\n    colorLine: \"#ddd\"\r\n  },\r\n  {\r\n    id: \"03-id\",\r\n    title: \"Анимация линий\",\r\n    type: \"checkbox\",\r\n    className: \"form-check-input\",\r\n    active: true\r\n  },\r\n  {\r\n    id: \"04-id\",\r\n    title: \"Размер линий\",\r\n    type: \"range\",\r\n    className: \"form-check-input\",\r\n    value: 2\r\n  }\r\n];\r\n","const LoadModel = () => {\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container d-flex justify-content-center align-items-center vw-100 vh-100\"\r\n        style={{\r\n          position: \"relative\",\r\n          color: \"white\",\r\n          fontSize: \"24px\",\r\n          textAlign: \"center\",\r\n          flexDirection: \"column\"\r\n        }}\r\n      >\r\n        <div class=\"input-group\">\r\n          <input\r\n            type=\"file\"\r\n            class=\"form-control\"\r\n            id=\"inputGroupFile04\"\r\n            aria-describedby=\"inputGroupFileAddon04\"\r\n            aria-label=\"Upload\"\r\n          ></input>\r\n          <button\r\n            class=\"btn btn-outline-secondary\"\r\n            type=\"button\"\r\n            id=\"inputGroupFileAddon04\"\r\n          >\r\n            Загрузить модель\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoadModel;\r\n","import React, { useState } from \"react\";\r\nimport headerInfo from \"./HeaderFooterComp/HeaderInfo\";\r\nimport Footer from \"./HeaderFooterComp/Footer\";\r\nimport Header from \"./HeaderFooterComp/Header\";\r\nimport ContentPageOne from \"./ContentElem/ContentPageOne\";\r\nimport ContentPageTwo from \"./ContentElem/ContentPageTwo\";\r\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport ExitWindow from \"./ContentElem/ContentPageOne/ExitWindow\";\r\nimport Settings from \"./ContentElem/ContentPageOne/Settings\";\r\nimport SettingProperties from \"./ContentElem/ContentPageOne/SettingProperties\";\r\nimport LoadModel from \"./ContentElem/ContentPageOne/LoadModel\";\r\n\r\nexport default function App() {\r\n  const [settingPropertie, setSettingPropertie] = useState(SettingProperties);\r\n  return (\r\n    <div className=\"position-relative\">\r\n      <Router>\r\n        <div\r\n          className=\"btn-group br_bt d-flex fixed-top bg-white\"\r\n          role=\"group\"\r\n          aria-label=\"Basic outlined example\"\r\n          style={{ borderBottom: \"2px solid #6f47d7\" }}\r\n        >\r\n          <Header name={headerInfo} />\r\n        </div>\r\n        <Routes>\r\n          <Route path=\"/\" element={<ContentPageOne />} />\r\n          <Route\r\n            path=\"/NewModel\"\r\n            element={<ContentPageTwo settingPropertie={settingPropertie} />}\r\n          />\r\n          <Route path=\"/LoadModel\" element={<LoadModel />} />\r\n          <Route\r\n            path=\"/Settings\"\r\n            element={\r\n              <Settings\r\n                settingPropertie={settingPropertie}\r\n                setSettingPropertie={setSettingPropertie}\r\n              />\r\n            }\r\n          />\r\n          <Route path=\"/Exit\" element={<ExitWindow />} />\r\n        </Routes>\r\n      </Router>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Component/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}